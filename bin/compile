#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# The repo is setup as view_components/demo
# But Heroku requires for the app to be on root
# So this is shuffling directories so we can have
# demo/view_components

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

PROJECT_PATH=demo
GEM_PATH=view_components
TMP_DIR=$CACHE_DIR/$PROJECT_PATH

echo "-----> My Subdir buildpack: path is $PROJECT_PATH"
echo "       creating cache: $CACHE_DIR"
mkdir -p $CACHE_DIR

echo "       moving working dir: $PROJECT_PATH to $TMP_DIR"
mv $BUILD_DIR/$PROJECT_PATH $CACHE_DIR/

echo "       creating gem dir: $TMP_DIR/$GEM_PATH"
mkdir -p $BUILD_DIR/$PROJECT_PATH/$GEM_PATH/

echo "       copying build dir $BUILD_DIR to $TMP_DIR/$GEM_PATH"
cp -R $BUILD_DIR/. $TMP_DIR/$GEM_PATH

echo "       cleaning $BUILD_DIR"
rm -rf $BUILD_DIR

echo "       recreating $BUILD_DIR"
mkdir -p $BUILD_DIR

echo "       copying work dir from cache $TMP_DIR to build dir $BUILD_DIR"
cp -R $TMP_DIR/. $BUILD_DIR/

echo "       cleaning $TMP_DIR"
rm -rf $TMP_DIR

# We need to update Gemfile/Gemfile.lock
# with the new path to the gem
echo "       updating gem path on Gemfile"
sed 's#path: "\.\./"#path: "\./view_components/"#' $BUILD_DIR/Gemfile >$BUILD_DIR/aux
rm $BUILD_DIR/Gemfile
mv $BUILD_DIR/aux $BUILD_DIR/Gemfile

echo "       updating gem path on Gemfile.lock"
sed 's#remote: \.\.#remote: view_components#' $BUILD_DIR/Gemfile.lock >$BUILD_DIR/aux
rm $BUILD_DIR/Gemfile.lock
mv $BUILD_DIR/aux $BUILD_DIR/Gemfile.lock

exit 0
